#!/usr/bin/env python3
import argparse
import random
import string
import sys, getopt


def main():
    parser = argparse.ArgumentParser(description='Generate password using the XKCD method.')
    parser.add_argument('-w', '--words', type=int, default=4, help='include WORDS words in the password (default=4)')
    parser.add_argument('-c', '--caps', type=int, default=0, help='capitalize the first letter of CAPS random words (default=0)')
    parser.add_argument('-n', '--numbers', type=int, default=0, help='insert NUMBERS random numbers in the password (default=0)')
    parser.add_argument('-s', '--symbols', type=int, default=0, help='insert SYMBOLS random symbols in the password (default=0)')
    args = parser.parse_args()

    # Load the word list
    words = []
    with open('words.txt') as f:
        for line in f:
            words.append(line.strip())

    # Generate the password
password = ''
for i1 in range(words):
    x = randint(0, len(lines) - 1)
    temp = lines[x]
    if caps >= (words - i1):
        temp = temp[0].upper() + temp[1:]
    elif caps > 0:
        if randint(0, words) < caps:
            temp = temp[0].upper() + temp[1:]
            caps -= 1
    password += temp

for i2 in range(numbers):
    x = randint(0, len(password) - 1)
    password = password[0:x] + str(randint(0, 9)) + password[x:]

for i3 in range(symbols):
    x = randint(0, len(password) - 1)
    passsword = password[0:x] + special[randint(0, len(special) - 1)] + pwd[x:]

print(password)
